\begin{thebibliography}{10}

\bibitem{abreu2007accuracy}
R.~Abreu, P.~Zoeteweij, and A.~J. Van~Gemund.
\newblock On the accuracy of spectrum-based fault localization.
\newblock In {\em Testing: Academic and Industrial Conference Practice and
  Research Techniques-MUTATION, 2007. TAICPART-MUTATION 2007}, pages 89--98.
  IEEE, 2007.

\bibitem{chillarege1996orthogonal}
R.~Chillarege.
\newblock Orthogonal defect classification.
\newblock {\em Handbook of Software Reliability Engineering}, pages 359--399,
  1996.

\bibitem{cohen1997aetg}
D.~M. Cohen, S.~R. Dalal, M.~L. Fredman, and G.~C. Patton.
\newblock The aetg system: An approach to testing based on combinatorial
  design.
\newblock {\em Software Engineering, IEEE Transactions on}, 23(7):437--444,
  1997.

\bibitem{cohen2003augmenting}
M.~B. Cohen, C.~J. Colbourn, and A.~C. Ling.
\newblock Augmenting simulated annealing to build interaction test suites.
\newblock In {\em Software Reliability Engineering, 2003. ISSRE 2003. 14th
  International Symposium on}, pages 394--405. IEEE, 2003.

\bibitem{colbourn2008locating}
C.~J. Colbourn and D.~W. McClary.
\newblock Locating and detecting arrays for interaction faults.
\newblock {\em Journal of combinatorial optimization}, 15(1):17--48, 2008.

\bibitem{do2005supporting}
H.~Do, S.~Elbaum, and G.~Rothermel.
\newblock Supporting controlled experimentation with testing techniques: An
  infrastructure and its potential impact.
\newblock {\em Empirical Software Engineering}, 10(4):405--435, 2005.

\bibitem{duraes2006emulation}
J.~A. Duraes and H.~S. Madeira.
\newblock Emulation of software faults: A field data study and a practical
  approach.
\newblock {\em IEEE Transactions on Software Engineering}, 32(11):849--867,
  2006.

\bibitem{ghandehari2013fault}
L.~S. Ghandehari, Y.~Lei, D.~Kung, R.~Kacker, and R.~Kuhn.
\newblock Fault localization based on failure-inducing combinations.
\newblock In {\em Software Reliability Engineering (ISSRE), 2013 IEEE 24th
  International Symposium on}, pages 168--177. IEEE, 2013.

\bibitem{ghandehari2013applying}
L.~S.~G. Ghandehari, M.~N. Bourazjany, Y.~Lei, R.~N. Kacker, and D.~R. Kuhn.
\newblock Applying combinatorial testing to the siemens suite.
\newblock In {\em Software Testing, Verification and Validation Workshops
  (ICSTW), 2013 IEEE Sixth International Conference on}, pages 362--371. IEEE,
  2013.

\bibitem{ghandehari2012identifying}
L.~S.~G. Ghandehari, Y.~Lei, T.~Xie, R.~Kuhn, and R.~Kacker.
\newblock Identifying failure-inducing combinations in a combinatorial test
  set.
\newblock In {\em Software Testing, Verification and Validation (ICST), 2012
  IEEE Fifth International Conference on}, pages 370--379. IEEE, 2012.

\bibitem{hutchins1994experiments}
M.~Hutchins, H.~Foster, T.~Goradia, and T.~Ostrand.
\newblock Experiments on the effectiveness of dataflow-and control-flow-based
  test adequacy criteria.
\newblock In {\em Software Engineering, 1994. Proceedings. ICSE-16., 16th
  International Conference on}, pages 191--200. IEEE, 1994.

\bibitem{jia2015learning}
Y.~Jia, M.~B. Cohen, M.~Harman, and J.~Petke.
\newblock Learning combinatorial interaction test generation strategies using
  hyperheuristic search.
\newblock In {\em Proceedings of the 37th International Conference on Software
  Engineering-Volume 1}, pages 540--550. IEEE Press, 2015.

\bibitem{jones2005empirical}
J.~A. Jones and M.~J. Harrold.
\newblock Empirical evaluation of the tarantula automatic fault-localization
  technique.
\newblock In {\em Proceedings of the 20th IEEE/ACM international Conference on
  Automated software engineering}, pages 273--282. ACM, 2005.

\bibitem{kuhn2002investigation}
D.~R. Kuhn and M.~J. Reilly.
\newblock An investigation of the applicability of design of experiments to
  software testing.
\newblock In {\em Software Engineering Workshop, 2002. Proceedings. 27th Annual
  NASA Goddard/IEEE}, pages 91--95. IEEE, 2002.

\bibitem{kuhn2004software}
D.~R. Kuhn, D.~R. Wallace, and J.~AM~Gallo.
\newblock Software fault interactions and implications for software testing.
\newblock {\em Software Engineering, IEEE Transactions on}, 30(6):418--421,
  2004.

\bibitem{lei2008ipog}
Y.~Lei, R.~Kacker, D.~R. Kuhn, V.~Okun, and J.~Lawrence.
\newblock Ipog/ipog-d: efficient test generation for multi-way combinatorial
  testing.
\newblock {\em Software Testing, Verification and Reliability}, 18(3):125--148,
  2008.

\bibitem{li2012improved}
J.~Li, C.~Nie, and Y.~Lei.
\newblock Improved delta debugging based on combinatorial testing.
\newblock In {\em Quality Software (QSIC), 2012 12th International Conference
  on}, pages 102--105. IEEE, 2012.

\bibitem{ma2013locating}
C.~Ma, Y.~Zhang, J.~Liu, et~al.
\newblock Locating faulty code using failure-causing input combinations in
  combinatorial testing.
\newblock In {\em Software Engineering (WCSE), 2013 Fourth World Congress on},
  pages 91--98. IEEE, 2013.

\bibitem{martinez2008algorithms}
C.~Mart{\'\i}nez, L.~Moura, D.~Panario, and B.~Stevens.
\newblock Algorithms to locate errors using covering arrays.
\newblock In {\em LATIN 2008: Theoretical Informatics}, pages 504--519.
  Springer, 2008.

\bibitem{martinez2009locating}
C.~Mart{\'\i}nez, L.~Moura, D.~Panario, and B.~Stevens.
\newblock Locating errors using elas, covering arrays, and adaptive testing
  algorithms.
\newblock {\em SIAM Journal on Discrete Mathematics}, 23(4):1776--1799, 2009.

\bibitem{masri2014prevalence}
W.~Masri and R.~A. Assi.
\newblock Prevalence of coincidental correctness and mitigation of its impact
  on fault localization.
\newblock {\em ACM transactions on software engineering and methodology
  (TOSEM)}, 23(1):8, 2014.

\bibitem{naish2011model}
L.~Naish, H.~J. Lee, and K.~Ramamohanarao.
\newblock A model for spectra-based software diagnosis.
\newblock {\em ACM Transactions on software engineering and methodology
  (TOSEM)}, 20(3):11, 2011.

\bibitem{nie2011minimal}
C.~Nie and H.~Leung.
\newblock The minimal failure-causing schema of combinatorial testing.
\newblock {\em ACM Transactions on Software Engineering and Methodology
  (TOSEM)}, 20(4):15, 2011.

\bibitem{nie2011survey}
C.~Nie and H.~Leung.
\newblock A survey of combinatorial testing.
\newblock {\em ACM Computing Surveys (CSUR)}, 43(2):11, 2011.

\bibitem{niu2013identifying}
X.~Niu, C.~Nie, Y.~Lei, and A.~T. Chan.
\newblock Identifying failure-inducing combinations using tuple relationship.
\newblock In {\em Software Testing, Verification and Validation Workshops
  (ICSTW), 2013 IEEE Sixth International Conference on}, pages 271--280. IEEE,
  2013.

\bibitem{reisner2010using}
E.~Reisner, C.~Song, K.-K. Ma, J.~S. Foster, and A.~Porter.
\newblock Using symbolic evaluation to understand behavior in configurable
  software systems.
\newblock In {\em Proceedings of the 32nd ACM/IEEE International Conference on
  Software Engineering-Volume 1}, pages 445--454. ACM, 2010.

\bibitem{renieres2003fault}
M.~Renieres and S.~P. Reiss.
\newblock Fault localization with nearest neighbor queries.
\newblock In {\em Automated Software Engineering, 2003. Proceedings. 18th IEEE
  International Conference on}, pages 30--39. IEEE, 2003.

\bibitem{shakya2012isolating}
K.~Shakya, T.~Xie, N.~Li, Y.~Lei, R.~Kacker, and R.~Kuhn.
\newblock Isolating failure-inducing combinations in combinatorial testing
  using test augmentation and classification.
\newblock In {\em Software Testing, Verification and Validation (ICST), 2012
  IEEE Fifth International Conference on}, pages 620--623. IEEE, 2012.

\bibitem{shi2005software}
L.~Shi, C.~Nie, and B.~Xu.
\newblock A software debugging method based on pairwise testing.
\newblock In {\em Computational Science--ICCS 2005}, pages 1088--1091.
  Springer, 2005.

\bibitem{song2012itree}
C.~Song, A.~Porter, and J.~S. Foster.
\newblock itree: Efficiently discovering high-coverage configurations using
  interaction trees.
\newblock In {\em Proceedings of the 2012 International Conference on Software
  Engineering}, pages 903--913. IEEE Press, 2012.

\bibitem{song2014itree}
C.~Song, A.~Porter, and J.~S. Foster.
\newblock itree: efficiently discovering high-coverage configurations using
  interaction trees.
\newblock {\em IEEE Transactions on Software Engineering}, 40(3):251--265,
  2014.

\bibitem{wang2010adaptive}
Z.~Wang, B.~Xu, L.~Chen, and L.~Xu.
\newblock Adaptive interaction fault location based on combinatorial testing.
\newblock In {\em Quality Software (QSIC), 2010 10th International Conference
  on}, pages 495--502. IEEE, 2010.

\bibitem{yilmaz2006covering}
C.~Yilmaz, M.~B. Cohen, and A.~A. Porter.
\newblock Covering arrays for efficient fault characterization in complex
  configuration spaces.
\newblock {\em Software Engineering, IEEE Transactions on}, 32(1):20--34, 2006.

\bibitem{zeller2002isolating}
A.~Zeller.
\newblock Isolating cause-effect chains from computer programs.
\newblock In {\em Proceedings of the 10th ACM SIGSOFT symposium on Foundations
  of software engineering}, pages 1--10. ACM, 2002.

\bibitem{zhang2012faulty}
J.~Zhang, F.~Ma, and Z.~Zhang.
\newblock Faulty interaction identification via constraint solving and
  optimization.
\newblock In {\em Theory and Applications of Satisfiability Testing--SAT 2012},
  pages 186--199. Springer, 2012.

\bibitem{zhang2011characterizing}
Z.~Zhang and J.~Zhang.
\newblock Characterizing failure-causing parameter interactions by adaptive
  testing.
\newblock In {\em Proceedings of the 2011 International Symposium on Software
  Testing and Analysis}, pages 331--341. ACM, 2011.

\end{thebibliography}
